pipeline:
  name: rn-expo-mobile
  identifier: rnexpomobile
  projectIdentifier: fever
  orgIdentifier: default
  timeout: 2h
  allowStageExecutions: true

  properties:
    ci:
      codebase:
        connectorRef: github_connector
        repoName: fever_mobile
        build: <+input>
      execution:
        concurrency:
          group: <+pipeline.sequenceId>-<+codebase.branch>
          cancel: true
      reportPaths: "**/*.xml"

  variables:
    - name: CHANNEL
      type: String
      description: EAS channel to publish to (develop/production)
      value: develop

  stages:
    # ---------------------------------------------------------------------
    # STAGE 1: VALIDATION (Cloud Runtime)
    # ---------------------------------------------------------------------
    - stage:
        name: Validate
        identifier: Validate
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              # Step 1: Setup Node & Expo CLI
              - step:
                  type: Run
                  name: Setup Node and Expo
                  identifier: setup_node_expo
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      corepack enable
                      npm install -g expo-cli eas-cli

              # Step 2: Install Project Dependencies
              - step:
                  type: Run
                  name: Install dependencies
                  identifier: install
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      corepack enable
                      npm ci

              # Step 3: Lint
              - step:
                  type: Run
                  name: Lint
                  identifier: lint
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      npm run lint

              # Step 4: TypeScript Check
              - step:
                  type: Run
                  name: Type Check
                  identifier: type_check
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      npx tsc --noEmit

              # Step 5: Unit Tests
              - step:
                  type: Run
                  name: Unit Tests
                  identifier: unit_tests
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      npm test -- --ci || echo "No tests found or skipped"

              # Step 6: Expo Doctor
              - step:
                  type: Run
                  name: Expo Doctor
                  identifier: expo_doctor
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      npx expo doctor --non-interactive

              # Step 7: JS Bundle Check (Optional)
              - step:
                  type: Run
                  name: JS Bundle Check
                  identifier: js_bundle
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android.bundle || true
                      npx react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios.bundle || true

    # ---------------------------------------------------------------------
    # STAGE 2: PRODUCTION BUILD (EAS Cloud, main branch only)
    # ---------------------------------------------------------------------
    - stage:
        name: Production Build
        identifier: Production_Build
        type: CI
        when:
          pipelineStatus: Success
          condition: <+trigger.type> != "PullRequest" && <+codebase.branch> == "main"
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              # Expo Cloud Build - Android
              - step:
                  type: Run
                  name: Expo Cloud Build - Android
                  identifier: eas_build_android_production
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas build --platform android --profile production --non-interactive

              # Expo Cloud Build - iOS
              - step:
                  type: Run
                  name: Expo Cloud Build - iOS
                  identifier: eas_build_ios_production
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas build --platform ios --profile production --non-interactive

    # ---------------------------------------------------------------------
    # STAGE 3: OTA UPDATE (EAS Cloud, main branch only)
    # ---------------------------------------------------------------------
    - stage:
        name: OTA Update
        identifier: OTA_Update
        type: CI
        when:
          pipelineStatus: Success
          condition: <+trigger.type> != "PullRequest" && <+codebase.branch> == "main"
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              # EAS OTA Update
              - step:
                  type: Run
                  name: EAS OTA Update
                  identifier: eas_update_production
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas update --channel "production" --non-interactive
