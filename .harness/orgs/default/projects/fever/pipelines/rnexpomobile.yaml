pipeline:
  name: rn-expo-mobile
  identifier: rnexpomobile
  projectIdentifier: fever
  orgIdentifier: default
  timeout: 2h
  allowStageExecutions: true

  properties:
    ci:
      codebase:
        connectorRef: github_connector
        repoName: fever_mobile
        build: <+input>
      execution:
        concurrency:
          group: <+pipeline.sequenceId>-<+codebase.branch>
          cancel: true
      reportPaths: "**/*.xml"

  variables:
    - name: CHANNEL
      type: String
      description: EAS channel to publish to (develop/production)
      value: develop

  stages:
    # ---------------------------------------------------------------------
    # STAGE 1: VALIDATION (Runs for all scenarios, on Windows Docker Runner)
    # ---------------------------------------------------------------------
    - stage:
        name: Validate
        identifier: Validate
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Windows
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          delegateSelectors:
            - windows-amd64
          execution:
            steps:
              - step:
                  type: Run
                  name: Install dependencies
                  identifier: install
                  spec:
                    shell: Powershell
                    image: node:20-bullseye
                    command: |
                      corepack enable
                      npm ci

              - step:
                  type: Run
                  name: Lint and Test
                  identifier: test
                  spec:
                    shell: Powershell
                    image: node:20-bullseye
                    command: |
                      npm run lint --if-present
                      npm test --if-present -- --ci

              - step:
                  type: Run
                  name: Local Build Check
                  identifier: local_build
                  spec:
                    shell: Powershell
                    image: expo-selfhosted:latest
                    command: |
                      Write-Output "Starting Expo Dev Server..."
                      npm ci
                      Start-Process -NoNewWindow -FilePath "npx" -ArgumentList "expo start --non-interactive --offline --clear" -RedirectStandardOutput expo.log -RedirectStandardError expo.log -PassThru | Tee-Object -Variable expoProcess
                      Start-Sleep -Seconds 60
                      try {
                        Invoke-WebRequest -Uri http://127.0.0.1:19002 -UseBasicParsing | Out-Null
                        Write-Output "✅ Expo dev server started successfully."
                        Stop-Process -Id $expoProcess.Id -Force
                        exit 0
                      } catch {
                        Write-Output "❌ Expo dev server did not start. Showing last logs..."
                        Get-Content expo.log -Tail 200
                        Stop-Process -Id $expoProcess.Id -Force
                        exit 1
                      }

    # ---------------------------------------------------------------------
    # STAGE 2: PRODUCTION BUILD (Only for merges to main)
    # ---------------------------------------------------------------------
    - stage:
        name: Production Build
        identifier: Production_Build
        type: CI
        when:
          pipelineStatus: Success
          condition: <+trigger.type> != "PullRequest" && <+codebase.branch> == "main"
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          execution:
            steps:
              - step:
                  type: Run
                  name: Expo Cloud Build - Android
                  identifier: eas_build_android_production
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas build --platform android --profile production --non-interactive

              - step:
                  type: Run
                  name: Expo Cloud Build - iOS
                  identifier: eas_build_ios_production
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas build --platform ios --profile production --non-interactive

    # ---------------------------------------------------------------------
    # STAGE 3: OTA UPDATE (Only for merges to main)
    # ---------------------------------------------------------------------
    - stage:
        name: OTA Update
        identifier: OTA_Update
        type: CI
        when:
          pipelineStatus: Success
          condition: <+trigger.type> != "PullRequest" && <+codebase.branch> == "main"
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          execution:
            steps:
              - step:
                  type: Run
                  name: EAS OTA Update
                  identifier: eas_update_production
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas update --channel "production" --non-interactive
