pipeline:
  name: rn-expo-mobile
  identifier: rnexpomobile
  projectIdentifier: fever
  orgIdentifier: default
  timeout: 2h

  properties:
    ci:
      codebase:
        connectorRef: github_connector
        repoName: fever_mobile
        build: <+input>
      execution:
        concurrency:
          group: <+pipeline.sequenceId>-<+codebase.branch>
          cancel: true
      reportPaths: "**/*.xml"

  variables:
    - name: CHANNEL
      type: String
      description: EAS channel to publish to (develop/production)
      value: develop

  stages:
    # ---------------------------------------------------------------------
    # STAGE 1: BUILD
    # ---------------------------------------------------------------------
    - stage:
        name: Build
        identifier: Build
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          # delegateSelectors:
          #   - local-docker
          execution:
            steps:
              - step:
                  type: Run
                  name: Install dependencies
                  identifier: install
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      corepack enable || true
                      npm ci

              - step:
                  type: Run
                  name: Lint and Test
                  identifier: test
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      npm run lint --if-present
                      npm test --if-present -- --ci

              # --- LOCAL sanity check ---
              - step:
                  type: Run
                  name: Local Expo sanity with no cloud build
                  identifier: expo_local_sanity
                  when:
                    stageStatus: Success
                    condition: <+trigger.type> == "PullRequest" || <+codebase.branch> == "develop"
                  spec:
                    shell: Sh
                    image: expo-selfhosted:latest
                    command: |
                      set -e
                      npm ci
                      npx expo start --non-interactive --offline --clear > expo.log 2>&1 &
                      EXPO_PID=$!
                      sleep 60
                      if curl -fsS http://127.0.0.1:19002 >/dev/null; then
                        echo "‚úÖ Expo dev server started successfully."
                        kill $EXPO_PID
                        wait $EXPO_PID || true
                        exit 0
                      else
                        echo "‚ùå Expo dev server did not start. Recent logs:"
                        tail -n +200 expo.log || true
                        kill $EXPO_PID || true
                        exit 1
                      fi

              # --- Expo CLOUD build ONLY on merge‚Üímain ---
              - step:
                  type: Run
                  name: Expo Cloud Build with Android prod
                  identifier: eas_build_android_production
                  when:
                    stageStatus: Success
                    condition: <+trigger.type> != "PullRequest" && <+codebase.branch> == "main"
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas build --platform android --profile production --non-interactive

              - step:
                  type: Run
                  name: Expo Cloud Build with iOS prod
                  identifier: eas_build_ios_production
                  when:
                    stageStatus: Success
                    condition: <+trigger.type> != "PullRequest" && <+codebase.branch> == "main"
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas build --platform ios --profile production --non-interactive

    # ---------------------------------------------------------------------
    # STAGE 2: DEPLOY
    # ---------------------------------------------------------------------
    - stage:
        name: Deploy
        identifier: Deploy
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          execution:
            steps:
              # --- OTA to DEVELOP on merges to develop ---
              - step:
                  type: Run
                  name: EAS OTA Update on develop
                  identifier: eas_update_develop
                  when:
                    stageStatus: Success
                    condition: <+codebase.branch> == "develop"
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    command: |
                      echo "üö´ Skipping EAS OTA update for develop branch to avoid using free build quota."

              # --- OTA to PRODUCTION on merges to main ---
              - step:
                  type: Run
                  name: EAS OTA Update on production
                  identifier: eas_update_production
                  when:
                    stageStatus: Success
                    condition: <+codebase.branch> == "main"
                  spec:
                    shell: Sh
                    image: node:20-bullseye
                    envVariables:
                      EAS_TOKEN: <+secrets.getValue("EAS_TOKEN")>
                      EXPO_TOKEN: <+secrets.getValue("EXPO_TOKEN")>
                    command: |
                      corepack enable || true
                      npm ci
                      npx eas whoami
                      npx eas update --channel "production" --non-interactive
