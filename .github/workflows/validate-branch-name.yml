name: Validate PR Branch Name

on:
  pull_request:
    types: [opened, reopened, edited, synchronize, ready_for_review]
    branches: [develop]

permissions:
  contents: read
  statuses: write
  pull-requests: write

jobs:
  validate-branch-name:
    name: Validate branch naming convention
    runs-on: ubuntu-latest
    
    steps:
      # Immediate pending status
      - name: Set initial pending status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: 'pending',
              context: 'Branch Name Validation',
              description: 'Validating branch name pattern...'
            });
        
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Validate branch name
        id: validate-branch
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          
          if [[ "$BRANCH_NAME" =~ ^feat/ ]] || 
             [[ "$BRANCH_NAME" =~ ^bug/ ]] || 
             [[ "$BRANCH_NAME" =~ ^hotfix/ ]]; then
            echo "✅ Branch name '$BRANCH_NAME' matches required pattern"
            echo "result=success" >> $GITHUB_OUTPUT
          else
            echo "::error::Branch name '$BRANCH_NAME' is invalid."
            echo "result=failure" >> $GITHUB_OUTPUT
            exit 1
          fi
          
      - name: Update status check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = '${{ steps.validate-branch.outputs.result }}';
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.payload.pull_request.head.sha,
              state: result === 'success' ? 'success' : 'failure',
              context: 'Branch Name Validation',
              description: result === 'success' 
                ? 'Branch name follows required pattern' 
                : 'Branch name does not follow required pattern'
            });
            
            if (result === 'failure') {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: '❌ Invalid branch name!\n\nPRs to `develop` must come from branches with these prefixes:\n- `feat/` (feature branches)\n- `bug/` (bugfix branches)\n- `hotfix/` (hotfix branches)'
              });
            }