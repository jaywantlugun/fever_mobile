name: Expo PR Validation
on:
  pull_request:
    branches: [develop, main]  # Only trigger for PRs to these branches
    types: [opened, reopened, synchronize]  # Trigger on these events

env:
  NODE_VERSION: 18
  EXPO_CLI_VERSION: latest  # Will automatically use compatible version with your Expo SDK

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Needed for full git history
          
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: Install Tools
        run: |
          npm install -g @expo/cli@${{ env.EXPO_CLI_VERSION }} eas-cli
          expo --version  # Verify installation
          
      - name: Install Dependencies
        run: npm ci
        env:
          CI: true  # Prevent interactive installs
          
      - name: Run Checks
        run: |
          echo "Running TypeScript checks..."
          npx tsc --noEmit
          
          echo "Running ESLint..."
          npm run lint
          
          echo "Running Expo Doctor..."
          expo doctor
          
      - name: Trigger Harness Pipeline
        id: trigger-harness
        uses: actions/github-script@v6
        env:
          HARNESS_WEBHOOK_TOKEN: ${{ secrets.HARNESS_WEBHOOK }}
        with:
          script: |
            try {
              // Create check run
              await github.rest.checks.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: 'Harness CI',
                head_sha: context.payload.pull_request.head.sha,
                status: 'in_progress',
                output: {
                  title: "Build started in Harness",
                  summary: "Triggering pipeline for validation"
                }
              });
              
              // Trigger Harness pipeline
              const response = await fetch('https://app.harness.io/gateway/pipeline/api/webhook/custom/trigger/${{ env.HARNESS_WEBHOOK_TOKEN }}', {
                method: 'POST',
                headers: { 
                  'Content-Type': 'application/json',
                  'X-Harness-Token': '${{ env.HARNESS_WEBHOOK_TOKEN }}'
                },
                body: JSON.stringify({
                  action: "pr_validation",
                  branch: context.payload.pull_request.head.ref,
                  base_branch: context.payload.pull_request.base.ref,
                  pr_id: context.payload.number,
                  repo: context.repo.repo,
                  commit_sha: context.payload.pull_request.head.sha,
                  sender: context.payload.sender.login
                })
              });
              
              if (!response.ok) {
                throw new Error(`Harness trigger failed: ${response.status}`);
              }
              
              return "Trigger successful";
            } catch (error) {
              core.setFailed(`Trigger failed: ${error}`);
              throw error;
            }

      - name: Wait for Harness Completion
        uses: fountainhead/action-wait-for-check@v1.0.0
        if: always()
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'Harness CI'
          timeoutSeconds: 1800  # 30 minute timeout
          intervalSeconds: 30